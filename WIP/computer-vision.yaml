apiVersion: v1
kind: Namespace
metadata:
  name: frigate
  labels:
    name: frigate

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: frigate-config
  namespace: frigate
  labels:
    app.kubernetes.io/name: frigate-config
data:
  config.yml: |
    mqtt:
      host: mqtt.server.com
      # Optional: port (default: shown below)
      port: 1883
      # Optional: topic prefix (default: shown below)
      # WARNING: must be unique if you are running multiple instances
      topic_prefix: frigate
      # Optional: client id (default: shown below)
      # WARNING: must be unique if you are running multiple instances
      client_id: frigate
      # Optional: user
      user: mqtt_user
      # Optional: password
      # NOTE: Environment variables that begin with 'FRIGATE_' may be referenced in {}.
      #       eg. password: '{FRIGATE_MQTT_PASSWORD}'
      password: password
      # Optional: interval in seconds for publishing stats (default: shown below)
      stats_interval: 60

    detectors:
      cpu1:
        type: cpu

    objects:
      track:
        - person
        - car
        - bicycle

    cameras:
      front_road:
        ffmpeg:
          inputs:
            - path: rtsp://192.168.50.251:554/ch01.264
              roles:
                - detect
                - rtmp

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: frigate
  namespace: frigate
spec:
  replicas: 1
  selector:
    matchLabels:
      app: frigate
  template:
    metadata:
      labels:
        app: frigate
        app.kubernetes.io/version: "0.0.5"
    spec:
      containers:
        - name: frigate
          image: ghcr.io/blakeblackshear/frigate:stable
          ports:
            - name: http
              containerPort: 5000
              protocol: TCP
            - name: rtmp
              containerPort: 1935
              protocol: TCP
            - name: rtsp
              containerPort: 8554
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
              scheme: HTTP
            initialDelaySeconds: 30
          startupProbe:
            httpGet:
              path: /
              port: http
              scheme: HTTP
          volumeMounts:
            - mountPath: /config/config.yml
              subPath: config.yml
              name: configmap
            - mountPath: /config
              name: config
            - mountPath: /data
              name: data
            - mountPath: /media
              name: media
            - name: dshm
              mountPath: /dev/shm
      volumes:
        - name: configmap
          configMap:
            name: frigate-config
        - name: config
          emptyDir: {}
        - name: data
          emptyDir: {}
        - name: media
          emptyDir: {}
        - name: dshm
          emptyDir: {}
          
---
apiVersion: v1
kind: Service
metadata:
  name: frigate-nodeport
  namespace: frigate
spec:
  type: NodePort
  ports:
  - port: 5000
    targetPort: 5000
    nodePort: 30000
  selector:
    app: frigate
